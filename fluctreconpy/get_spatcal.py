#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Dec  8 16:33:01 2022

@author: mlampert
"""

# class SpatialCalibration():
#     def __init__(self, shot=None,device=None,nbi=None):
#         if shot is None:
#             raise ValueError('shot number is empty')
#         if device is None:
#             raise ValueError('device is not set')
#         if nbi is None:
#             nbi='default'
#         self.shot=shot
#         self.device=device
#         self.nbi=nbi
#         self.get()
#     def get():
import numpy as np

def get_spatcal(shot=None,
                device=None,
                nbi=None,
                temporary=True):

    if device == 'KSTAR':
        if temporary == True and shot == 14110 and nbi == 2:
            R=np.asarray([2172.4240723, 2179.2734375, 2186.1726074, 2193.1218262, 2200.1208496,
                          2207.1699219, 2214.2690430, 2221.4182129, 2232.0788574, 2239.3527832,
                          2246.6772461, 2254.0522461, 2261.4775391, 2268.9538574, 2276.4804688,
                          2284.0581055, 2172.5039062, 2179.2966309, 2186.1386719, 2193.0302734,
                          2199.9716797, 2206.9626465, 2214.0036621, 2221.0942383, 2231.6679688,
                          2238.8825684, 2246.1474609, 2253.4624023, 2260.8276367, 2268.2434082,
                          2275.7094727, 2283.2260742, 2172.5444336, 2179.2727051, 2186.0502930,
                          2192.8769531, 2199.7531738, 2206.6787109, 2213.6535645, 2220.6779785,
                          2231.1530762, 2238.3007812, 2245.4982910, 2252.7456055, 2260.0427246,
                          2267.3901367, 2274.7875977, 2282.2351074, 2172.5361328, 2179.2075195,
                          2185.9277344, 2192.6970215, 2199.5153809, 2206.3828125, 2213.2995605,
                          2220.2653809, 2230.6533203, 2237.7416992, 2244.8796387, 2252.0668945,
                          2259.3041992, 2266.5910645, 2273.9277344, 2281.3142090])
            z=np.asarray([-18.3017521, -18.0691433, -17.8458366, -17.6318283,
                          -17.4271183, -17.2317104, -17.0456009, -16.8687916,
                          -16.6244564, -16.4706936, -16.3262291, -16.1910667,
                          -16.0652027, -15.9486389, -15.8413744, -15.7434092,
                          -8.5842123,  -8.3345747,  -8.0942087,  -7.8631153,
                          -7.6412940,  -7.4287448,  -7.2254672,  -7.0314622,
                          -6.7616558,  -6.5906291,  -6.4288745,  -6.2763915,
                          -6.1331811,  -5.9992428,  -5.8745761,  -5.7591815,
                          2.4127333,   2.6816111,   2.9412472,   3.1916430,
                          3.4327974,   3.6647115,   3.8873842,   4.1008162,
                          4.3993974,   4.5899282,   4.7712178,   4.9432669,
                          5.1060748,   5.2596416,   5.4039683,   5.5390534,
                          12.1513300,  12.4372168,  12.7138901,  12.9813509,
                          13.2395973,  13.4886312,  13.7284508,  13.9590578,
                          14.2830772,  14.4908514,  14.6894112,  14.8787584,
                          15.0588923,  15.2298126,  15.3915186,  15.5440130])
            phi=np.asarray([0.5073246, 0.5051091, 0.5028950, 0.5006824, 0.4984714,
                            0.4962622, 0.4940548, 0.4918495, 0.4885933, 0.4863933,
                            0.4841958, 0.4820009, 0.4798085, 0.4776189, 0.4754321,
                            0.4732483, 0.5072986, 0.5051017, 0.5029058, 0.5007114,
                            0.4985183, 0.4963268, 0.4941370, 0.4919490, 0.4887181,
                            0.4865350, 0.4843542, 0.4821757, 0.4799997, 0.4778262,
                            0.4756553, 0.4734873, 0.5072855, 0.5051094, 0.5029342,
                            0.5007600, 0.4985871, 0.4964156, 0.4942455, 0.4920770,
                            0.4888745, 0.4867105, 0.4845484, 0.4823885, 0.4802307,
                            0.4780754, 0.4759225, 0.4737721, 0.5072883, 0.5051304,
                            0.5029733, 0.5008171, 0.4986619, 0.4965079, 0.4943552,
                            0.4922039, 0.4890265, 0.4868791, 0.4847336, 0.4825900,
                            0.4804484, 0.4783090, 0.4761718, 0.4740371])

        elif temporary == True and shot == 14110 and nbi == 123:

            R=np.asarray([2115.8320526238044, 2116.4522806193477, 2117.1822178826333, 2117.8534407062962,
                          2125.7256358879827, 2126.3704632011122, 2127.1283214624395, 2127.8243440702472,
                          2135.6408884358052, 2136.3105294566794, 2137.0965488403249, 2137.8175816617018,
                          2145.5769328591155, 2146.2715990780334, 2147.0860164640876, 2147.8322670889997,
                          2155.5328591175471, 2156.2527590700765, 2157.0958080314749, 2157.8674811538840,
                          2165.5078145427683, 2166.2531539805686, 2167.1250649762455, 2167.9223625650129,
                          2175.5009230292549, 2176.2719048855042, 2177.1729052204901, 2177.9960264833448,
                          2185.5113552451471, 2186.3081797780446, 2187.2384937656097, 2188.0876352925070,
                          2200.3393816715029, 2201.1747696852412, 2202.1488215663430, 2203.0367824947616,
                          2210.3892426278981, 2211.2509584131853, 2212.2548673315396, 2213.1693247693415,
                          2220.4536270291760, 2221.3418619360200, 2222.3758422429682, 2223.3169840645592,
                          2230.5317708700832, 2231.4467138420955, 2232.5109771989719, 2233.4789889262343,
                          2240.6229199613599, 2241.5647575815619, 2242.6595130110122, 2243.6545778582990,
                          2250.7263296073793, 2251.6952461422165, 2252.8207000775083, 2253.8429989948490,
                          2260.8412860292487, 2261.8374635295972, 2262.9938199285293, 2264.0435317021597,
                          2270.9670690567086, 2271.9906873582140, 2273.1781477029181, 2274.2554489545796])

            z=np.asarray([17.391502475946538, 27.346433966402827, 38.598962643450847, 48.552352634759302,
                          15.611390960076051, 25.571975251239706, 36.830894899560064, 46.789939194040926,
                          13.831961151026746, 23.798196219471208, 35.063504554109983, 45.028201132578431,
                          12.053207652425385, 22.025091491860621, 33.296786247238259, 43.267133107650977,
                          10.275134059798063, 20.252664652515847, 31.530743550143313, 41.506738679035550,
                          8.4977367789894060, 18.480912118695670, 29.765372892988779, 39.747014288312926,
                          6.7210194027841226, 16.709837471774563, 28.000677844248997, 37.987963492544424,
                          4.9449801344471211, 14.939438920723660, 26.236656619346377, 36.229584512859873,
                          2.3207715850360273, 12.323565141670002, 23.630206034935810, 33.631470965265805,
                          0.54641105242052390, 10.554840345777905, 21.867852940938008, 31.874755146445239,
                          -1.2272704748083640, 8.7867925404237326, 20.106174562222293, 30.118712032302284,
                          -3.0002738934836657, 7.0194208316230231, 18.345170008024638, 28.363340734922247,
                          -4.7725992036051821, 5.2527252193759182, 16.584839278345186, 26.608641254305212,
                          -6.5442455100535710, 3.4867065959583670, 14.825183262245048, 24.854614476668417,
                          -8.3152148271046826, 1.7213629534929566, 13.066199959080990, 23.101258407768341,
                          -10.085505588213664, -0.043304146451674796, 11.307890924795458, 21.348574598570082])

            phi=np.asarray([0.74153560035642963, 0.74124648970013296, 0.74090656202130389, 0.74059428450219633,
                            0.73695364917898387, 0.73665720411174362, 0.73630913493550632, 0.73598978813761962,
                            0.73242447315438663, 0.73212081775692839, 0.73176474595261465, 0.73143845147393893,
                            0.72794736915593528, 0.72763662525068518, 0.72727268713970217, 0.72693956432878515,
                            0.72352166368982407, 0.72320395089828460, 0.72283228031883395, 0.72249244633191567,
                            0.71914667215821082, 0.71882210789464296, 0.71844283619574678, 0.71809640599251423,
                            0.71482173475635824, 0.71449043427882319, 0.71410369037798094, 0.71375077677253862,
                            0.71054618548883697, 0.71020826190236774, 0.70981417229009081, 0.70945488595581874,
                            0.70431488441727130, 0.70396737282573318, 0.70356265096047010, 0.70319414232182953,
                            0.70015892279502390, 0.69980505930385928, 0.69939329495508584, 0.69901867882819901,
                            0.69605010682155122, 0.69568999727227465, 0.69527130874644716, 0.69489068858928582,
                            0.69198780550447681, 0.69162155370548106, 0.69119605701947728, 0.69080953427250436,
                            0.68797139739155833, 0.68759910514875533, 0.68716691406479602, 0.68677458818211989,
                            0.68400027048201406, 0.68362203762959006, 0.68318326369027904, 0.68278523217088671,
                            0.68007381374871012, 0.67968973816751233, 0.67924449071714688, 0.67884084912422704,
                            0.67619143165643514, 0.67580160931428535, 0.67534999554444963, 0.67494083754574663])


        spatcal=np.zeros([4,16,3])
        spatcal[:,:,0]=np.reshape(R,(4,16))
        spatcal[:,:,1]=np.reshape(z,(4,16))
        spatcal[:,:,2]=np.reshape(phi,(4,16))

        results={'R':np.reshape(R,(4,16)),
                 'z':np.reshape(z,(4,16)),
                 'phi':np.reshape(phi,(4,16)),
                 'spatcal':np.flip(spatcal, axis=1)}

        return results